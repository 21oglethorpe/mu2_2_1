-- library declaration
library IEEE;
use IEEE.std_logic_1164.all;
-- entity
entity flip_flop is
    port(output:   out  std_logic;
        clock, reset, clock_enable, D:               in std_logic);
end flip_flop;

--flip flop with w/Synchronous Active High Reset
architecture ff_HR of flip_flop is
begin
--MSB represents the enabler of the system
tik: process (clock)
begin
   if clock'event and clock='1' then
      if reset='1' then
         output <= '0';
      else
         output <= D;
      end if;
   end if;
end process tik;
end  ff_HR;

--flip flop with w/Synchronous Active High Reset with chip enable (CE)
architecture ff_HR_CE of flip_flop is
begin
--MSB represents the enabler of the system
tik: process (clock)
begin
   if clock'event and clock='1' then
      if reset='1' then
         output <= '0';
      elsif clock_enable ='1' then
         output <= D;
      end if;
   end if;
end process tik;
end  ff_HR_CE;

--flip flop with w/Synchronous Active Low Reset
architecture ff_LR of flip_flop is
begin
--MSB represents the enabler of the system
tik: process (clock)
begin
   if clock'event and clock='1' then
      if reset='0' then
         output <= '0';
      else
         output <= D;
      end if;
   end if;
end process tik;
    
   end  ff_LR;
   
--flip flop with w/Synchronous Active Low Reset with chip enable (CE)
architecture ff_LR_CE of flip_flop is
begin
--MSB represents the enabler of the system
tik: process (clock)
begin
   if clock'event and clock='1' then
      if reset='0' then
         output <= '0';
      elsif clock_enable ='1' then
         output <= D;
      end if;
   end if;
end process tik;
end  ff_LR_CE;
